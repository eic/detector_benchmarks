# Snakemake file for training a new neural network for LOW-Q2 tagger electron momentum reconstruction
from itertools import product

import os
import shutil

configfile: "local_config.yml"

EVENT_EXTENSION = ".ab.hepmc3.tree.root"
SIM_EXTENSION   = ".edm4hep.root"
RECO_EXTENSION  = ".eicrecon.tree.edm4eic.root"
 
REMOTE_EVENTS_DIRECTORY = "root://dtn-eic.jlab.org//work/eic2/EPIC/EVGEN/SIDIS/pythia6-eic/1.0.0/10x100/q2_0to1/"
FILE_BASE               = "pythia_ep_noradcor_10x100_q2_0.000000001_1.0_run"

XML_FILE        = "epic_edit.xml"
BEAM_ENERGY     = "10"

def remote_file_exists(server,url):
    try:
        subprocess.check_output(['xrdfs', server, 'stat', url])
        return url
    except subprocess.CalledProcessError:
        return None
'''
rule run_simulation_tagger:           
    params:
        XML=XML_FILE,
        input=remote_file_exists(REMOTE_EVENTS_DIRECTORY+FILE_BASE+wildcards.index+EVENT_EXTENSION),
    output:
        config["SIM_DIRECTORY"]+FILE_BASE+"{index}_tagger"+SIM_EXTENSION,
    shell: """
npsim \
    --inputFiles {params.input} \
    --outputFile {output[0]} \
    --compactFile {params.XML} \
    --runType run \
    --numberOfEvents 100000 \
    --physics.list FTFP_BERT \
    --field.eps_min 5e-06 \
    --field.eps_max 1e-04 \
    --physics.rangecut 50 \
"""
'''
rule run_reconstruction:
    params:
        XML=XML_FILE,
        beam_energy=BEAM_ENERGY,
        collections="TaggerTrackerProjectedTracks,MCScatteredElectrons,MCParticles,EventHeader",
    input:
        expand(
            config["SIM_DIRECTORY"]+FILE_BASE+"{index}_tagger"+SIM_EXTENSION,
            index=range(1,4),            
        ),       
    output:
        config["RECO_DIRECTORY"]+FILE_BASE+".tagger_recon"+RECO_EXTENSION,
    shell: """
/home/simong/EIC/EICrecon/bin/eicrecon {input} -Pdd4hep:xml_files={params.XML} -Ppodio:output_include_collections={params.collections} -Ppodio:output_file={output} -PLOWQ2:LowQ2Trajectories:electron_beamE={params.beam_energy}
"""

rule low_q2_train_network:
    params:
        beam_energy=BEAM_ENERGY,
        type_name="LowQ2MomentumRegression",
        method_name="DNN",
        model_dir="LowQ2Model"
    input:
        train_data=config["RECO_DIRECTORY"]+FILE_BASE+".tagger_recon"+RECO_EXTENSION,
    output:
        root_output=config["MODEL_DIRECTORY"]+"trainedData.root",
    shell:
      """
      root -l -b -q 'TaggerRegressionEICrecon.C++("{input.train_data}", "{output.root_output}", "{params.model_dir}", "{params.beam_energy}", "{params.type_name}", "{params.method_name}")'
      """

