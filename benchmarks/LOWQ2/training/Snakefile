# Snakemake file for training a new neural network for LOW-Q2 tagger electron momentum reconstruction
from itertools import product

import os
import shutil
from snakemake.remote.S3 import RemoteProvider as S3RemoteProvider

S3 = S3RemoteProvider(
    endpoint_url="https://eics3.sdcc.bnl.gov:9000",
    access_key_id=os.environ["S3_ACCESS_KEY"],
    secret_access_key=os.environ["S3_SECRET_KEY"],
)


SIM_DIRECTORY    = "/scratch/EIC/G4out/S3/"
RECON_DIRECTORY  = "/scratch/EIC/ReconOut/S3/"
MODEL_DIRECTORY  = "/scratch/EIC/LowQ2Model/"
REMOTE_DIRECTORY = "eictest/EPIC/EVGEN/SIDIS/pythia6-eic/1.0.0/10x100/q2_0to1/"
FILE_BASE        = "pythia_ep_noradcor_10x100_q2_0.000000001_1.0_run"
XML_FILE         = "/home/simong/EIC/epic/epic_18x275.xml"

rule download_input:
    input:
        S3.remote(REMOTE_DIRECTORY+FILE_BASE+"{index}"+EVENT_EXTENSION),
    output:
        EVENTS_DIRECTORY+FILE_BASE+"{index}"+EVENT_EXTENSION,
    run:
        shutil.move(input[0], output[0])

rule run_reconstruction:
    input:
        SIM_DIRECTORY+FILE_BASE+"{index}"+SIM_EXTENSION,        
        "/home/simong/EIC/EICrecon/bin/eicrecon",
    params:
        XML=XML_FILE,
        collections="LowQ2Tracks,ScatteredElectron",
    output:
        RECON_DIRECTORY+FILE_BASE+"{index}_reco.{tag}"+SIM_EXTENSION,        
    shell: """
/home/simong/EIC/EICrecon/bin/eicrecon {input[0]} -Pjana:nevents=400  -Pdd4hep:xml_files={params.XML} -Ppodio:output_include_collections={params.collections} -Ppodio:output_file={output[0]} -PLOWQ2:LowQ2Trajectories:electron_beamE=18
"""

rule low_q2_train_network:
    params:
        beam_energy="18",
        type_name="LowQ2MomentumRegression",
        method_name="DNN"
    input:
        train_data=RECON_DIRECTORY+FILE_BASE+"{index}_reco.{tag}"+SIM_EXTENSION
    output:
        root_output=MODEL_DIRECTORY+trainedData.root",
        model_output=MODEL_DIRECTORY+"weights/"
    shell:
      """
      root -l -b -q 'TaggerRegressionEICrecon.C+("{input.train_data}", "{output.root_output}", MODEL_DIRECTORY, "{params.beam_energy}", "{params.type_name}", "{params.method_name}")'
      """

