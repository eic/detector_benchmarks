rule beamline_sim:
    input:
        macro="benchmarks/beamline/beamlineGPS.mac",
    output:
        "sim_output/beamline/beamlineTest{CAMPAIGN}.edm4hep.root",
    shell:
        """
            exec npsim \
            --runType run \
            --enableG4GPS \
            --macroFile {input.macro} \
            --compactFile $DETECTOR_PATH/epic_ip6_extended.xml \
            --outputFile {output} \
        """

rule beamline_analysis:
    params:
        xml=os.getenv("DETECTOR_PATH")+"/epic_ip6_extended.xml",
    input:
        script="benchmarks/beamline/beamlineAnalysis.C",
        data="sim_output/beamline/beamlineTest{CAMPAIGN}.edm4hep.root",
    output:
        rootfile="sim_output/beamline/analysis/beamlineTestAnalysis{CAMPAIGN}.root",
        beamspot_canvas="sim_output/beamline/analysis/beamspot_{CAMPAIGN}.png",
        x_px_canvas="sim_output/beamline/analysis/x_px_{CAMPAIGN}.png",
        y_py_canvas="sim_output/beamline/analysis/y_py_{CAMPAIGN}.png",
        fitted_position_means_stdevs_canvas="sim_output/beamline/analysis/fitted_position_means_stdevs_{CAMPAIGN}.png",
        fitted_momentum_means_stdevs_canvas="sim_output/beamline/analysis/fitted_momentum_means_stdevs_{CAMPAIGN}.png",
        pipe_parameter_canvas="sim_output/beamline/analysis/pipe_parameter_{CAMPAIGN}.png",
    shell:
        """
            root -l -b -q '{input.script}("{input.data}", "{output.rootfile}", "{params.xml}",
            "{output.beamspot_canvas}", "{output.x_px_canvas}", "{output.y_py_canvas}",
            "{output.fitted_position_means_stdevs_canvas}", "{output.fitted_momentum_means_stdevs_canvas}",
            "{output.pipe_parameter_canvas}")'
        """

rule beamline:
    input:
        [
            "sim_output/beamline/analysis/beamlineTestAnalysis{CAMPAIGN}.root",
            "sim_output/beamline/analysis/beamspot_{CAMPAIGN}.png",
            "sim_output/beamline/analysis/x_px_{CAMPAIGN}.png",
            "sim_output/beamline/analysis/y_py_{CAMPAIGN}.png",
            "sim_output/beamline/analysis/fitted_position_means_stdevs_{CAMPAIGN}.png",
            "sim_output/beamline/analysis/fitted_momentum_means_stdevs_{CAMPAIGN}.png",
            "sim_output/beamline/analysis/pipe_parameter_{CAMPAIGN}.png",
        ],
    output:
        directory("results/beamline/{CAMPAIGN}/")
    shell:
        """
            mkdir {output}        
            cp {input} {output}
        """

rule beamline_local:
    input:
        "results/beamline/local/"