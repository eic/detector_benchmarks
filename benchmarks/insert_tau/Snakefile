def get_n_events(wildcards):
    energy = float(wildcards.P)
    n_events = 1000
    n_events = int(n_events // ((energy / 20) ** 0.5))
    return n_events

rule insert_tau_generate:
    input:
        script="benchmarks/insert_tau/analysis/gen_particles.cxx",
    output:
        GEN_FILE="sim_output/insert_tau/tau-_{P}GeV.hepmc",
    params:
        N_EVENTS=get_n_events,
        th_max=7.0,
        th_min=1.7,
        P=lambda wildcards: wildcards.P,
    shell:
        """
root -l -b -q '{input.script}({params.N_EVENTS},"{output.GEN_FILE}", "tau-", {params.th_min}, {params.th_max}, 0., 360., {params.P})'
"""

rule insert_tau_simulate:
    input:
        GEN_FILE="sim_output/insert_tau/tau-_{P}GeV.hepmc",
        warmup="warmup/{DETECTOR_CONFIG}.edm4hep.root",
        geometry_lib=find_epic_libraries(),
    output:
        SIM_FILE="sim_output/insert_tau/{DETECTOR_CONFIG}_sim_tau-_{P}GeV_{INDEX}.edm4hep.root",
    params:
        N_EVENTS=get_n_events,
        INDEX=lambda wildcards: wildcards.INDEX,
        PHYSICS_LIST="FTFP_BERT",
        DETECTOR_PATH=os.environ["DETECTOR_PATH"],
        DETECTOR_CONFIG=lambda wildcards: wildcards.DETECTOR_CONFIG,
        DD4HEP_HASH=get_spack_package_hash("dd4hep"),
        NPSIM_HASH=get_spack_package_hash("npsim"),
    cache: True
    shell:
        """
# Running simulation
npsim \
   --compactFile {params.DETECTOR_PATH}/{params.DETECTOR_CONFIG}.xml \
   --numberOfEvents {params.N_EVENTS} \
   --skipNEvents $(( {params.N_EVENTS} * {params.INDEX} )) \
   --physicsList {params.PHYSICS_LIST} \
   --inputFiles {input.GEN_FILE} \
   --outputFile {output.SIM_FILE}
"""

rule insert_tau_recon:
    input:
        SIM_FILE="sim_output/insert_tau/{DETECTOR_CONFIG}_sim_tau-_{P}GeV_{INDEX}.edm4hep.root",
    output:
        REC_FILE="sim_output/insert_tau/{DETECTOR_CONFIG}_rec_tau-_{P}GeV_{INDEX}.edm4eic.root",
    params:
        N_EVENTS=get_n_events,
        DETECTOR_CONFIG=lambda wildcards: wildcards.DETECTOR_CONFIG,
        EICRECON_HASH=get_spack_package_hash("eicrecon"),
    cache: True
    shell:
        """
env DETECTOR_CONFIG={params.DETECTOR_CONFIG} \
  eicrecon {input.SIM_FILE} -Ppodio:output_file={output.REC_FILE} -Ppodio:output_collections=MCParticles,HcalEndcapPInsertRecHits,HcalEndcapPInsertClusters,HcalEndcapPInsertSubcellHits,EcalEndcapPInsertRecHits,EcalEndcapPInsertClusters,EcalEndcapPClusters,LFHCALClusters  -Pjana:nevents={params.N_EVENTS}
"""

rule insert_tau_analysis:
    input:
        expand("sim_output/insert_tau/{DETECTOR_CONFIG}_rec_tau-_{P}GeV_{INDEX}.edm4eic.root",
            P=[20, 30, 40, 50, 60, 80, 100],
            DETECTOR_CONFIG=["{DETECTOR_CONFIG}"],
            INDEX=range(5),
        ),
        script="benchmarks/insert_tau/analysis/tau_plots.py",
    output:
        results_dir=directory("results/{DETECTOR_CONFIG}/insert_tau"),
    shell:
        """
mkdir -p {output.results_dir}
python {input.script} {output.results_dir}
"""
