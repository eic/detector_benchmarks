material_maps:
  extends: .det_benchmark
  stage: simulate
  script:
    - ActsExampleGeometryDD4hep -j 1 -n 1 --dd4hep-input ${DETECTOR_PATH}/${DETECTOR_CONFIG}.xml --output-json --output-root --mat-output-file geometry-map --mat-output-allmaterial true --mat-output-sensitives false
    - test -f geometry-map.json
    - python3 benchmarks/material_maps/scripts/writeMapConfig.py geometry-map.json config-map.json
    - test -f config-map.json
    - python3 benchmarks/material_maps/scripts/configureMap.py geometry-map.json config-map.json
    - test -f config-map.json
    - ActsExampleMaterialRecordingDD4hep -j 1 -n ${JUGGLER_N_EVENTS} --dd4hep-input ${DETECTOR_PATH}/${DETECTOR_CONFIG}.xml --output-root 
    - test -f geant4_material_tracks.root
    - root -l -b -q -e "TChain T(\"material-tracks\"); T.Add(\"geant4_material_tracks.root\"); cout << T.GetEntries() << \" entries\" << endl; gApplication->Terminate(T.GetEntries()-${JUGGLER_N_EVENTS});"
    - ActsExampleMaterialMappingDD4hep -j 1 -n ${JUGGLER_N_EVENTS} --dd4hep-input ${DETECTOR_PATH}/${DETECTOR_CONFIG}.xml --input-root true --input-files geant4_material_tracks.root --mat-input-type file --mat-input-file geometry-map.json --output-root --output-json --output-cbor --mat-output-file material-maps --mat-mapping-surfaces true --mat-mapping-read-surfaces false --mat-mapping-volumes true --mat-mapping-volume-stepsize 1
    - test -f material-maps.json
    - ActsExampleMaterialValidationDD4hep -j 1 -n ${JUGGLER_N_EVENTS} --dd4hep-input ${DETECTOR_PATH}/${DETECTOR_CONFIG}.xml --mat-input-type file --mat-input-file material-maps.json --output-root --mat-output-file val-mat-map --prop-z0-sigma 0.0 --prop-d0-sigma 0.0
    - ls -al
    - mkdir -p results/material_maps
    - cp *.root *.json *.cbor results/material_maps/
  artifacts:
    paths:
      - results/material_maps
  allow_failure: true
