sim:nhcal_pion_rejection:
  extends: .det_benchmark
  stage: simulate
  parallel:
    matrix:
      - INDEX_RANGE: ["0 4","5 9"]
  script:
    - snakemake $SNAKEMAKE_FLAGS --cores $MAX_CORES_PER_JOB $(for INDEX in $(seq -f '%02.0f' $INDEX_RANGE); do echo sim_output/nhcal_pion_rejection/sim_epic_full.${INDEX}.edm4hep.root; done)


bench:nhcal_pion_rejection_analysis:
  extends: .det_benchmark
  stage: benchmarks
  needs:
    - "sim:nhcal_pion_rejection"
  script:
    - snakemake $SNAKEMAKE_FLAGS --cores $MAX_CORES_PER_JOB $(for INDEX in $(seq -f '%02.0f' $INDEX_RANGE); do echo sim_output/nhcal_pion_rejection/analysis_epic_full_10files.pdf; done)

collect_results:nhcal_pion_rejection:
  extends: .det_benchmark
  stage: collect
  needs: 
    - "bench:nhcal_pion_rejection_analysis"
  script:
    - ls -lrht
    - mv results{,_save}/ 
    - snakemake $SNAKEMAKE_FLAGS --cores 1 --delete-all-output results/nhcal_pion_rejection/analysis_epic_full_10files.pdf
    - mv results{_save,}/
