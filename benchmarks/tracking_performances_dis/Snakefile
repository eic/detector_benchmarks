import os

rule compile_analysis:
    input:
        "{path}/{filename}.cxx",
    output:
        "{path}/{filename}_cxx.d",
        "{path}/{filename}_cxx.so",
        "{path}/{filename}_cxx_ACLiC_dict_rdict.pcm",
    shell:
        """
root -l -b -q -e '.L {input}+'
"""

rule trk_dis_compile:
    input:
        "benchmarks/tracking_performances_dis/analysis/trk_dis_analysis_cxx.so",
        "benchmarks/tracking_performances_dis/analysis/trk_dis_plots_cxx.so"

# Process the generated HepMC files through the simulation
rule trk_dis_sim:
    input:
        warmup="warmup/{DETECTOR_CONFIG}.edm4hep.root",
    output:
        "sim_output/tracking_performances_dis/{DETECTOR_CONFIG}/pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_beamEffects_xAngle=-0.025_hiDiv_{INDEX}.edm4hep.root",
    params:
        N_EVENTS=200,
    shell:
        """
ddsim \
  --runType batch \
  --part.minimalKineticEnergy 1000*GeV  \
  --filter.tracker edep0 \
  -v WARNING \
  --numberOfEvents {params.N_EVENTS} \
  --compactFile $DETECTOR_PATH/{wildcards.DETECTOR_CONFIG}.xml \
  --inputFiles root://dtn-eic.jlab.org//work/eic2/EPIC/EVGEN/DIS/NC/{wildcards.EBEAM}x{wildcards.PBEAM}/minQ2={wildcards.MINQ2}/pythia8NCDIS_{wildcards.EBEAM}x{wildcards.PBEAM}_minQ2={wildcards.MINQ2}_beamEffects_xAngle=-0.025_hiDiv_vtxfix_{wildcards.INDEX}.hepmc3.tree.root \
  --outputFile {output}
"""

# Process the files produced in the previous step through EICRecon
rule trk_dis_reco:
    input:
        "sim_output/tracking_performances_dis/{DETECTOR_CONFIG}/pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_beamEffects_xAngle=-0.025_hiDiv_{INDEX}.edm4hep.root",
    output:
        "sim_output/tracking_performances_dis/{DETECTOR_CONFIG}/pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_beamEffects_xAngle=-0.025_hiDiv_{INDEX}.edm4eic.root",
    shell:
        """
set -m # monitor mode to prevent lingering processes
exec env DETECTOR_CONFIG={wildcards.DETECTOR_CONFIG} \
  eicrecon {input} -Ppodio:output_file={output} \
  -Ppodio:output_collections=MCParticles,ReconstructedChargedParticles,ReconstructedTruthSeededChargedParticles,CentralCKFTrackAssociations,CentralCKFTruthSeededTrackAssociations
"""

# Process the files -- either from the campaign or local running -- through the analysis script
rule trk_dis_analysis:
    input:
        script="benchmarks/tracking_performances_dis/analysis/trk_dis_analysis.cxx",
        script_compiled="benchmarks/tracking_performances_dis/analysis/trk_dis_analysis_cxx.so",
        data="sim_output/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_beamEffects_xAngle=-0.025_hiDiv_{INDEX}.edm4eic.root",
    output:
        config="results/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_{INDEX}/config.json",
        hists="results/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_{INDEX}/hists.root",
    wildcard_constraints:
        PREFIX= ".*",
        EBEAM="\d+",
        PBEAM="\d+",
	MINQ2="\d+",
        INDEX="\d+",
    shell:
        """
cat > {output.config} <<EOF
{{
  "rec_file": "{input.data}",
  "detector": "{wildcards.DETECTOR_CONFIG}",
  "ebeam": {wildcards.EBEAM},
  "pbeam": {wildcards.PBEAM},
  "Min_Q2": {wildcards.MINQ2},
  "output_prefix": "$(dirname "{output.hists}")/hists"
}}
EOF
root -l -b -q '{input.script}+("{output.config}")'
"""

#Merge all the files produced in the previous step
rule trk_dis_combine:
    input:
        lambda wildcards: [f"results/tracking_performances_dis/{wildcards.DETECTOR_CONFIG}/{wildcards.PREFIX}pythia8NCDIS_{wildcards.EBEAM}x{wildcards.PBEAM}_minQ2={wildcards.MINQ2}_{ix}/hists.root" for ix in range(1,int(wildcards.NUM_FILES)+1)],
    output:
        config="results/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_combined_{NUM_FILES}/config.json",
        hists="results/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_combined_{NUM_FILES}/hists.root",
    wildcard_constraints:
        PREFIX= ".*",
        EBEAM="\d+",
        PBEAM="\d+",
	MINQ2="\d+",
        NUM_FILES="\d+",
    shell:
        """
cat > {output.config} <<EOF
{{
  "hists_file": "{output.hists}",
  "detector": "{wildcards.DETECTOR_CONFIG}",
  "ebeam": {wildcards.EBEAM},
  "pbeam": {wildcards.PBEAM},
  "Min_Q2": {wildcards.MINQ2},
  "nfiles": {wildcards.NUM_FILES},
  "output_prefix": "$(dirname "{output.hists}")/plots"
}}
EOF
hadd {output.hists} {input}
"""

#Process the merged file through the plotting script
rule trk_dis_plots:
    input:
        script="benchmarks/tracking_performances_dis/analysis/trk_dis_plots.cxx",
        script_compiled="benchmarks/tracking_performances_dis/analysis/trk_dis_plots_cxx.so",
        config="results/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_combined_{NUM_FILES}/config.json",
    output:
        "results/tracking_performances_dis/{DETECTOR_CONFIG}/{PREFIX}pythia8NCDIS_{EBEAM}x{PBEAM}_minQ2={MINQ2}_combined_{NUM_FILES}/plots.pdf"
    wildcard_constraints:
        PREFIX= ".*",
        EBEAM="\d+",
        PBEAM="\d+",
	MINQ2="\d+",
        NUM_FILES="\d+",
    shell:
        """
root -l -b -q '{input.script}+("{input.config}")'
"""


#Examples of invocation
rule trk_dis_run_locally:
    input:
        "results/tracking_performances_dis/" + os.environ["DETECTOR_CONFIG"] + "/pythia8NCDIS_18x275_minQ2=1_combined_5/plots.pdf",
    message:
        "See output in {input[0]}"


rule trk_dis_run_locally_trk_only:
    input:
        "results/tracking_performances_dis/epic_craterlake_tracking_only/pythia8NCDIS_18x275_minQ2=1_combined_5/plots.pdf",
    message:
        "See output in {input[0]}"


